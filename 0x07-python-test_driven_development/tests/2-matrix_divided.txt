The ``2-matrix_divided`` module
============================

Using ``matrix_divided(matrix, div)``
---------------------

Importing function from the module:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Dividing a matrix by 3:

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Passing div as a string

    >>> matrix_divided([[10, 50], [30, 20]], "10")
    Traceback (most recent call last):
    	...
    TypeError: div must be a number

Dividing a matrix by 0:

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
    	...
    ZeroDivisionError: division by zero

Dividing a matrix which its rows don't have the same size:

    >>> matrix_divided([[22, 34], [2.78, 7.1, -10, 2], [-8]], 3)
    Traceback (most recent call last):
    	...
    TypeError: Each row of the matrix must have the same size

Dividing a matrix which its elements aren't integer/float numbers:

    >>> matrix_divided([["Hi", "dude"], ["sup", "bruh"]], 10)
    Traceback (most recent call last):
     	...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Dividing a matrix by inf:

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], float('inf'))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Passing inf in matrix:
	>>> matrix_divided([[1, float('inf'), 3], [4, 5, 6]], 2)
	[[0.5, inf, 1.5], [2.0, 2.5, 3.0]]

Passing inf in matrix and div:
	>>> matrix_divided([[1, float('inf'), 3], [4, 5, 6]], float('inf'))
	[[0.0, nan, 0.0], [0.0, 0.0, 0.0]]
